@import "./variables.module.scss";

* {
  box-sizing: border-box;
}

html {
  scroll-behavior: smooth;
}

html,
body {
  padding: 0;
  margin: 0;
  font-family: "Poppins", sans-serif;
  font-size: 1rem;
  font-weight: 300;
}

body.overflowYHidden {
  overflow-y: hidden; // Use when displaying modal
}

h1,
h2,
h3,
h4,
h5,
h6,
p,
figure {
  margin: 0;
}

a {
  color: inherit;
  text-decoration: none;
}

strong {
  font-size: inherit;
  font-weight: 500;
}

button {
  padding: 7px 17px;
  font-family: inherit;
  font-size: 1rem;
  font-weight: 400;
  border: none;
  border-radius: 100px;
  color: #ffffff;
  background: linear-gradient(
    0.25turn,
    $secondary-color,
    $secondary-color-light
  );
  cursor: pointer;
}

button:disabled {
  opacity: 0.6;
}

#services,
#organisation,
#commitments,
#questions,
#about {
  scroll-margin-top: 81px; // Header height
  // scroll-snap-margin-top: 81px; // Header height + Safari & iOS fix
}

// NAVIGATION MOBILE
.mobileNav {
  position: fixed;
  top: -200px;
  right: 0;
  width: 100%;
  text-align: right;
  background-color: #ffffff;
  box-shadow: 1px 1px 20px;
  z-index: 5;
  transition: top 0.5s;
  ul {
    margin: 20px 0;
    padding-right: 50px;
    li {
      margin-bottom: 10px;
      list-style-type: none;
    }
  }
}

.mobileNav.active {
  top: 81px; // Add 81px to top because of fixed position header (80px + 1px border)
  transition: top 0.5s;
}

@media (min-width: 1101px) {
  .mobileNav {
    display: none;
  }
}

// OVERLAY
.overlay {
  position: fixed; /* Sit on top of the page content */
  width: 100%; /* Full width (cover the whole page) */
  height: 100%; /* Full height (cover the whole page) */
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: rgba(0, 0, 0, 0.6); /* Black background with opacity */
  z-index: 20; /* Specify a stack order in case you're using a different order for other elements */
}

// SERVICE
.serviceContainer {
  position: fixed;
  top: 0;
  right: -800px;
  width: 90%;
  max-width: 800px;
  min-height: 100%;
  background-color: hsl(0, 0%, 100%);
  border-radius: 10px 0 0 10px;
  z-index: 100;
  transition: right 0.7s; // 0.7s match 700ms setTimeout in components/Service.tsx
}

.serviceContainer.active {
  right: 0px;
  transition: right 0.7s; // 0.7s match 700ms setTimeout in components/Service.tsx
}
